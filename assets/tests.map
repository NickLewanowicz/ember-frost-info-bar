{"version":3,"sources":["dummy/tests/blanket-options.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/ember-frost-info-bar-test.js","dummy/tests/test-helper.js","dummy/tests/unit/components/info-bar-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/blanket-options', ['exports'], function (exports) {\n  /* globals blanket, module */\n\n  var options = {\n    modulePrefix: 'ember-frost-info-bar',\n    filter: '//.*ember-frost-info-bar/.*/',\n    antifilter: '//.*(tests|template).*/',\n    loaderExclusions: [],\n    enableCoverage: true,\n    cliOptions: {\n      reporters: ['lcov'],\n      autostart: true,\n      lcovOptions: {\n        outputFile: 'coverage/lcov.info',\n        renamer: function renamer(fileName) {\n          return fileName.replace('ember-frost-info-bar', 'addon') + '.js';\n        }\n      }\n    }\n  };\n\n  if (typeof exports === 'undefined') {\n    blanket.options(options);\n  } else {\n    module.exports = options;\n  }\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/integration/components/ember-frost-info-bar-test', ['exports', 'chai', 'ember-hook', 'ember-mocha', 'mocha', 'sinon', 'ember'], function (exports, _chai, _emberHook, _emberMocha, _mocha, _sinon, _ember) {\n  var next = _ember['default'].run.next;\n\n  var testTemplate = _ember['default'].HTMLBars.template((function () {\n    return {\n      meta: {\n        'fragmentReason': {\n          'name': 'missing-wrapper',\n          'problems': ['wrong-type']\n        },\n        'revision': 'Ember@2.6.2',\n        'loc': {\n          'source': null,\n          'start': {\n            'line': 1,\n            'column': 0\n          },\n          'end': {\n            'line': 23,\n            'column': 4\n          }\n        }\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode('\\n  ');\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment('');\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [['inline', 'frost-info-bar', [], ['hook', ['subexpr', '@mut', [['get', 'hook', ['loc', [null, [2, 24], [2, 28]]]]], [], []], 'icon-module', ['subexpr', 'component', ['frost-icon'], ['icon', 'bacon', 'pack', 'dummy'], ['loc', [null, [3, 16], [6, 5]]]], 'title-module', ['subexpr', 'component', ['text-box'], ['text', '&lt;placeholder: title&gt;'], ['loc', [null, [7, 17], [9, 5]]]], 'summary-module', ['subexpr', 'component', ['text-box'], ['isVisible', ['subexpr', '@mut', [['get', 'summary', ['loc', [null, [11, 16], [11, 23]]]]], [], []], 'text', '&lt;placeholder: summary&gt;'], ['loc', [null, [10, 19], [13, 5]]]], 'controls-module', ['subexpr', 'component', ['text-box'], ['text', '&lt;placeholder: controls&gt;'], ['loc', [null, [14, 20], [16, 5]]]], 'actions-module', ['subexpr', 'component', ['frost-button'], ['design', 'info-bar', 'icon', 'infobar-create', 'text', 'Click me!', 'onClick', ['subexpr', 'action', ['triggerAction'], [], ['loc', [null, [21, 14], [21, 38]]]]], ['loc', [null, [17, 19], [22, 5]]]]], ['loc', [null, [2, 2], [23, 4]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n\n  (0, _emberMocha.describeComponent)('ember-frost-info-bar', 'Integration: EmberFrostInfoBarComponent', {\n    integration: true\n  }, function () {\n    var props = undefined;\n    var spy = undefined;\n    (0, _mocha.beforeEach)(function () {\n      (0, _emberHook.initialize)();\n      spy = _sinon['default'].spy();\n      props = {\n        hook: 'my-info-bar',\n        actions: {\n          triggerAction: spy\n        }\n      };\n      this.setProperties(props);\n      this.render(testTemplate);\n    });\n    var text = function text(el) {\n      return el.text().trim();\n    };\n    (0, _emberMocha.it)('has a default hook name', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar');\n      (0, _chai.expect)(el.hasClass('frost-info-bar')).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('has a hook for icon', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar-icon');\n      (0, _chai.expect)(el.hasClass('frost-info-bar-icon')).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('has a hook for title', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar-title');\n      (0, _chai.expect)(text(el)).to.eql('<placeholder: title>');\n    });\n\n    (0, _emberMocha.it)('has a hook for summary', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar-summary');\n      (0, _chai.expect)(text(el)).to.eql('<placeholder: summary>');\n    });\n\n    (0, _emberMocha.it)('has a hook for controls', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar-controls');\n      (0, _chai.expect)(text(el)).to.eql('<placeholder: controls>');\n    });\n\n    (0, _emberMocha.it)('has a hook for actions', function () {\n      var el = (0, _emberHook.$hook)('my-info-bar-actions');\n      (0, _chai.expect)(text(el)).to.eql('Click me!');\n    });\n    (0, _emberMocha.it)('triggers action correctly', function (done) {\n      var el = (0, _emberHook.$hook)('my-info-bar-actions');\n      el.find('button').click();\n      next(function () {\n        (0, _chai.expect)(spy.called).to.be['true'];\n        done();\n      });\n    });\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-mocha'], function (exports, _dummyTestsHelpersResolver, _emberMocha) {\n\n  (0, _emberMocha.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/unit/components/info-bar-test', ['exports', 'ember-mocha', 'mocha'], function (exports, _emberMocha, _mocha) {\n  var expect = chai.expect;\n\n  (0, _emberMocha.describeComponent)('frost-info-bar', 'FrostInfoBarComponent', {\n    unit: true\n  }, function () {\n    var component = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      component = this.subject();\n    });\n\n    (0, _mocha.it)('includes className frost-info-bar', function () {\n      expect(component.classNames).to.include('frost-info-bar');\n    });\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxGA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}